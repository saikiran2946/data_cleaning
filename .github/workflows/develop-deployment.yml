name: Develop Deployment

on:
  push:
    branches:
      - "develop"

permissions:
  id-token: write
  contents: read

jobs:
  set_time:
    runs-on: ubuntu-latest
    outputs:
      timestamp: ${{ steps.calculate_time.outputs.timestamp }}
    steps:
      - name: Calculate current timestamp
        id: calculate_time
        run: echo "timestamp=$(date +%Y%m%d%H%M%S)" >> $GITHUB_OUTPUT

  build-and-Push:
    runs-on: ubuntu-latest
    environment: develop
    needs: set_time
    env:
      IMAGE_TAG: ${{ needs.set_time.outputs.timestamp }}
    steps:
      - name: "Checkout"
        uses: actions/checkout@main
      - name: Login to Azure Container Registry
        uses: azure/docker-login@v2
        with:
          login-server: ${{vars.ACR_AZURE_LOGIN_SERVER}}
          username: ${{vars.ACR_ADMIN_USERNAME}}
          password: ${{vars.ACR_ADMIN_PASSWORD}}
      - name: Build Docker Image
        run: |
          docker build . -t ${{vars.DOCKER_IMAGE_NAME}}
          docker image ls
      - name: Tag the Docker Image
        run: |
          docker tag ${{vars.DOCKER_IMAGE_NAME}} ${{vars.ACR_AZURE_LOGIN_SERVER}}/${{vars.DOCKER_IMAGE_NAME}}:latest
          docker tag ${{vars.DOCKER_IMAGE_NAME}} ${{vars.ACR_AZURE_LOGIN_SERVER}}/${{vars.DOCKER_IMAGE_NAME}}:${{env.IMAGE_TAG}}
      - name: Push DockerImage to ACR
        run: |
          docker image ls
          docker push ${{vars.ACR_AZURE_LOGIN_SERVER}}/${{vars.DOCKER_IMAGE_NAME}}:latest
          docker push ${{vars.ACR_AZURE_LOGIN_SERVER}}/${{vars.DOCKER_IMAGE_NAME}}:${{env.IMAGE_TAG}}
  Deploy:
    runs-on: ubuntu-latest
    environment: develop
    needs:
      - set_time
      - build-and-Push
    env:
      IMAGE_TAG: ${{ needs.set_time.outputs.timestamp }}
    steps:
      - uses: actions/checkout@v4
      - name: Azure login
        uses: azure/login@v2
        with:
          client-id: ${{ vars.AZURE_CLIENT_ID }}
          tenant-id: ${{ vars.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}

      - name: Build and deploy Container App
        uses: azure/container-apps-deploy-action@v2
        with:
          acrName: ${{vars.ACR_ADMIN_USERNAME}}
          containerAppName: ${{vars.CONTAINER_APP_NAME}}
          resourceGroup: ${{vars.RESOURCE_GROUP_NAME}}
          imageToDeploy: ${{vars.ACR_AZURE_LOGIN_SERVER}}/${{vars.DOCKER_IMAGE_NAME}}:${{env.IMAGE_TAG}}
          environmentVariables: >
            AZURE_OPENAI_API_KEY=${{ vars.AZURE_OPENAI_API_KEY }}
            AZURE_OPENAI_ENDPOINT=${{ vars.AZURE_OPENAI_ENDPOINT }}
            AZURE_OPENAI_DEPLOYMENT=${{ vars.AZURE_OPENAI_DEPLOYMENT }}
            AZURE_OPENAI_API_VERSION=${{ vars.AZURE_OPENAI_API_VERSION }}
